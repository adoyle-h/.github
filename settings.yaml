# These settings are synced to GitHub by https://probot.github.io/apps/settings/

# See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.
repository:
  # The name of the repository. Changing this will rename the repository
  # name: repo-name

  # A short description of the repository that will show up on GitHub
  # description: description of repo

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  # topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  # private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  # default_branch: master

  # Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
  allow_auto_merge: false

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to always allow a pull request head branch that is behind its base branch
  # to be updated even if it is not required to be up to date before merging, or false otherwise.
  allow_update_branch: false

  # The default value for a squash merge commit title:
  # - PR_TITLE - default to the pull request's title.
  # - COMMIT_OR_PR_TITLE - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
  squash_merge_commit_title: COMMIT_OR_PR_TITLE

  # The default value for a squash merge commit message:
  # - PR_BODY - default to the pull request's body.
  # - COMMIT_MESSAGES - default to the branch's commit messages.
  # - BLANK - default to a blank commit message.
  squash_merge_commit_message: COMMIT_MESSAGES

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: false

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

  # Either `true` to require contributors to sign off on web-based commits,
  # or `false` to not require contributors to sign off on web-based commits.
  web_commit_signoff_required: true

# Labels: define labels for Issues and Pull Requests
# color: If including a `#`, make sure to wrap it with quotes!
labels:
  - name: bug
    color: '#EE0802'
    description: Indicates an unexpected problem or unintended behavior
  - name: document
    color: '#45ABEB'
    description: Indicates a need for improvements or additions to documentation
  - name: duplicate
    color: '#CCCCCC'
    description: Indicates similar issues, pull requests, or discussions
  - name: feature
    color: '#9EEA7E'
    description: Indicates new feature requests
  - name: invalid
    color: '#E6E6E6'
    description: Indicates that an issue, pull request, or discussion is no longer relevant
  - name: wontfix
    color: '#FFFFFF'
    description: Indicates that work won't continue on an issue, pull request, or discussion

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# See https://docs.github.com/en/rest/reference/repos#update-branch-protection
branches:
  - name: master
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: [adoyle-h]
        teams: []

  - name: develop
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: [adoyle-h]
        teams: []

# Note: `permission` is only valid on organization-owned repositories.
# The permission to grant the collaborator. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
# * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
# collaborators:
#   - username: bkeepers
#     permission: push
#   - username: hubot
#     permission: pull

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# teams:
#   - name: core
#     # The permission to grant the team. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#     # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#     permission: admin
#   - name: docs
#     permission: push
